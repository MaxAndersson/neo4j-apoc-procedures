eb0dca8c (suspected graphql user)

    "head(logsForDb).source": "bolt-session	bolt	neo4j-javascript/0.0.0-dev		client/10.8.55.2:53846	server/10.8.8.234:17687>",
    "head(logsForDb).query": "MATCH (this:`Place`)
WHERE this.id = $param0
RETURN this { .id, events: apoc.coll.sortMulti([ (this)<-[:LOCATED_AT]-(this_events:Event)   | this_events { .id, createdAt: apoc.date.convertFormat(toString(this_events.createdAt), \"iso_zoned_date_time\", \"iso_offset_date_time\"), updatedAt: apoc.date.convertFormat(toString(this_events.updatedAt), \"iso_zoned_date_time\", \"iso_offset_date_time\"), startTime: apoc.date.convertFormat(toString(this_events.startTime), \"iso_zoned_date_time\", \"iso_offset_date_time\"), endTime: apoc.date.convertFormat(toString(this_events.endTime), \"iso_zoned_date_time\", \"iso_offset_date_time\"), .title, location: head([ (this_events)-[:LOCATED_AT]->(this_events_location:Place)   | this_events_location { .id, createdAt: apoc.date.convertFormat(toString(this_events_location.createdAt), \"iso_zoned_date_time\", \"iso_offset_date_time\"), updatedAt: apoc.date.convertFormat(toString(this_events_location.updatedAt), \"iso_zoned_date_time\", \"iso_offset_date_time\"), .googlePlaceId, .name, location: apoc.cypher.runFirstColumn('RETURN
CASE
	WHEN this_events_location.location IS NOT NULL THEN { point: this_events_location.location }
	ELSE NULL
END AS result',{ this_events_location: this_events_location },false), description: head([ (this_events_location)-[:DESCRIPTION]->(this_events_location_description:Text)   | this_events_location_description { .id, createdAt: apoc.date.convertFormat(toString(this_events_location_description.createdAt), \"iso_zoned_date_time\", \"iso_offset_date_time\"), updatedAt: apoc.date.convertFormat(toString(this_events_location_description.updatedAt), \"iso_zoned_date_time\", \"iso_offset_date_time\"), .format, .content } ]), physicalAddress: head([ (this_events_location)-[:PHYSICAL_ADDRESS]->(this_events_location_physicalAddress:Address)   | this_events_location_physicalAddress { .id, createdAt: apoc.date.convertFormat(toString(this_events_location_physicalAddress.createdAt), \"iso_zoned_date_time\", \"iso_offset_date_time\"), updatedAt: apoc.date.convertFormat(toString(this_events_location_physicalAddress.updatedAt), \"iso_zoned_date_time\", \"iso_offset_date_time\"), .street, .locality, .region, .postalCode, .country, .neighborhood, location: apoc.cypher.runFirstColumn('RETURN
CASE
	WHEN this_events_location_physicalAddress.location IS NOT NULL THEN { point: this_events_location_physicalAddress.location }
	ELSE NULL
END AS result',{ this_events_location_physicalAddress: this_events_location_physicalAddress },false) } ]), primaryPhone: head([ (this_events_location)-[:PRIMARY]->(this_events_location_primaryPhone:Phone)   | this_events_location_primaryPhone { .number } ]), primaryImage: head([ (this_events_location)-[:PRIMARY]->(this_events_location_primaryImage:Image)   | this_events_location_primaryImage { .id, createdAt: apoc.date.convertFormat(toString(this_events_location_primaryImage.createdAt), \"iso_zoned_date_time\", \"iso_offset_date_time\"), .url } ]) } ]), artists: [ (this_events)<-[:PERFORMER_IN]-(this_events_artists:Artist)   | this_events_artists { .id, createdAt: apoc.date.convertFormat(toString(this_events_artists.createdAt), \"iso_zoned_date_time\", \"iso_offset_date_time\"), updatedAt: apoc.date.convertFormat(toString(this_events_artists.updatedAt), \"iso_zoned_date_time\", \"iso_offset_date_time\"), .name, description: head([ (this_events_artists)-[:DESCRIPTION]->(this_events_artists_description:Text)   | this_events_artists_description { .id, createdAt: apoc.date.convertFormat(toString(this_events_artists_description.createdAt), \"iso_zoned_date_time\", \"iso_offset_date_time\"), updatedAt: apoc.date.convertFormat(toString(this_events_artists_description.updatedAt), \"iso_zoned_date_time\", \"iso_offset_date_time\"), .format, .content } ]), primaryImage: head([ (this_events_artists)-[:PRIMARY]->(this_events_artists_primaryImage:Image)   | this_events_artists_primaryImage { .id, createdAt: apoc.date.convertFormat(toString(this_events_artists_primaryImage.createdAt), \"iso_zoned_date_time\", \"iso_offset_date_time\"), .url } ]), links: [ (this_events_artists)<-[:BELONGS_TO]-(this_events_artists_links:Link)   | this_events_artists_links { .id, createdAt: apoc.date.convertFormat(toString(this_events_artists_links.createdAt), \"iso_zoned_date_time\", \"iso_offset_date_time\"), .url } ] } ], description: head([ (this_events)-[:DESCRIPTION]->(this_events_description:Text)   | this_events_description { .id, createdAt: apoc.date.convertFormat(toString(this_events_description.createdAt), \"iso_zoned_date_time\", \"iso_offset_date_time\"), updatedAt: apoc.date.convertFormat(toString(this_events_description.updatedAt), \"iso_zoned_date_time\", \"iso_offset_date_time\"), .format, .content } ]), primaryImage: head([ (this_events)-[:PRIMARY]->(this_events_primaryImage:Image)   | this_events_primaryImage { .id, createdAt: apoc.date.convertFormat(toString(this_events_primaryImage.createdAt), \"iso_zoned_date_time\", \"iso_offset_date_time\"), .url } ]) } ], ['^startTime']) } as this"
  },