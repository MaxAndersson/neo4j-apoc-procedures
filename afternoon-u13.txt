25b3d20a (suspect graphql user)



  MATCH (`user`:`User` {userId:$`userId`}) RETURN `user` { .userId , .avatarUrl , .username , .displayName , .bio ,followingUserCount: apoc.cypher.runFirstColumn(\"RETURN size((this)-[:FOLLOWS]->(:User))\", {this: user, cypherParams: $cypherParams}, false),followedByUserCount: apoc.cypher.runFirstColumn(\"RETURN size((this)<-[:FOLLOWS]-(:User))\", {this: user, cypherParams: $cypherParams}, false), .postPrivacySetting ,blockedUsers: [ user_blockedUsers IN apoc.cypher.runFirstColumn(\"MATCH (this)-[:BLOCKS_USER]->(u:User) RETURN u\", {this: user, cypherParams: $cypherParams}, true) | user_blockedUsers { .userId , .username , .displayName }] , .privacySetting ,isUserFollowedByAuth: apoc.cypher.runFirstColumn(\"RETURN exists((:User{userId: $cypherParams.authUserId})-[:FOLLOWS]->(this))\", {this: user, cypherParams: $cypherParams}, false),createdAt: { formatted: toString(`user`.createdAt) },posts: [user_posts IN [ user_posts IN apoc.cypher.runFirstColumn(\"MATCH (this)-[:CREATES_POST]->(p:Post)
WHERE this.userId = $cypherParams.authUserId OR (this.privacySetting <> \\"PRIVATE\\" AND p.privacySetting <> \\"PRIVATE\\")
RETURN p ORDER BY p.createdAt DESC
SKIP toInteger($offset) LIMIT toInteger($first+$offset)\", {this: user, cypherParams: $cypherParams, first: $`1_first`, offset: $`1_offset`}, true) WHERE (\"PrivatePost\" IN labels(user_posts) OR \"RewardPost\" IN labels(user_posts) OR \"TextPost\" IN labels(user_posts)) | user_posts] | head([`user_posts` IN [`user_posts`] WHERE \"PrivatePost\" IN labels(`user_posts`) | `user_posts` { FRAGMENT_TYPE: \"PrivatePost\",  .rewardAmount , .networkRewardCount ,purchase: head([ user_posts_purchase IN apoc.cypher.runFirstColumn(\"MATCH (this)-[]->(p:Purchase) RETURN p\", {this: user_posts, cypherParams: $cypherParams}, true) | user_posts_purchase {purchaser: head([ user_posts_purchase_purchaser IN apoc.cypher.runFirstColumn(\"MATCH (this)<-[:PURCHASER_REWARD]-(po:RewardPost) MATCH (po)<-[:CREATES_POST]-(u:User) RETURN u\", {this: user_posts_purchase, cypherParams: $cypherParams}, true) | user_posts_purchase_purchaser { .username , .userId }]) ,merchant: head([ user_posts_purchase_merchant IN apoc.cypher.runFirstColumn(\"MATCH (this)-[:ATTRIBUTE_TO]->(m:Merchant) RETURN m\", {this: user_posts_purchase, cypherParams: $cypherParams}, true) | user_posts_purchase_merchant { .name , .logoUrl }]) }]) , .postId , .privacySetting ,createdAt: { formatted: toString(`user_posts`.createdAt) } }] + [`user_posts` IN [`user_posts`] WHERE \"RewardPost\" IN labels(`user_posts`) | `user_posts` { FRAGMENT_TYPE: \"RewardPost\",  .postId , .privacySetting ,createdAt: { formatted: toString(`user_posts`.createdAt) },author: head([ user_posts_author IN apoc.cypher.runFirstColumn(\"MATCH (this)<-[:CREATES_POST]-(u:User) RETURN u\", {this: user_posts, cypherParams: $cypherParams}, true) | user_posts_author { .userId , .username , .avatarUrl , .displayName }]) ,likesCount: apoc.cypher.runFirstColumn(\"RETURN size((this)<-[:LIKES_POST]-(:User))\", {this: user_posts, cypherParams: $cypherParams}, false),purchaserNetworkRewardCount: apoc.cypher.runFirstColumn(\"MATCH (this)-[:PURCHASER_REWARD]->(p:Purchase) RETURN size(()-[:NETWORK_REWARD]->(p))\", {this: user_posts, cypherParams: $cypherParams}, false), .rewardAmount ,rewardType: apoc.cypher.runFirstColumn(\"MATCH (this)-[r]->(:Purchase) RETURN TYPE(r)\", {this: user_posts, cypherParams: $cypherParams}, false), .usedVoucher , .hasInviteReward , .networkRewardCount ,purchase: head([ user_posts_purchase IN apoc.cypher.runFirstColumn(\"MATCH (this)-[]->(p:Purchase) RETURN p\", {this: user_posts, cypherParams: $cypherParams}, true) | user_posts_purchase {purchaser: head([ user_posts_purchase_purchaser IN apoc.cypher.runFirstColumn(\"MATCH (this)<-[:PURCHASER_REWARD]-(po:RewardPost) MATCH (po)<-[:CREATES_POST]-(u:User) RETURN u\", {this: user_posts_purchase, cypherParams: $cypherParams}, true) | user_posts_purchase_purchaser { .username , .userId }]) ,merchant: head([ user_posts_purchase_merchant IN apoc.cypher.runFirstColumn(\"MATCH (this)-[:ATTRIBUTE_TO]->(m:Merchant) RETURN m\", {this: user_posts_purchase, cypherParams: $cypherParams}, true) | user_posts_purchase_merchant { .name , .logoUrl }]) }])  }] + [`user_posts` IN [`user_posts`] WHERE \"TextPost\" IN labels(`user_posts`) | `user_posts` { FRAGMENT_TYPE: \"TextPost\",  .postId , .privacySetting ,createdAt: { formatted: toString(`user_posts`.createdAt) },author: head([ user_posts_author IN apoc.cypher.runFirstColumn(\"MATCH (this)<-[:CREATES_POST]-(u:User) RETURN u\", {this: user_posts, cypherParams: $cypherParams}, true) | user_posts_author { .userId , .username , .avatarUrl , .displayName }])  }])][0..15] } AS `user`"
  },